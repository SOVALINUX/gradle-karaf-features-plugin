// *****************************************************************************
// 
// *****************************************************************************

buildscript {
    repositories {
        mavenCentral()
        mavenLocal()
        jcenter()
        maven { url "https://plugins.gradle.org/m2/" }
    }

    dependencies {
        classpath 'com.bmuschko:gradle-nexus-plugin:2.3.1'
        classpath 'org.hibernate.build.gradle:gradle-maven-publish-auth:2.0.1'
        classpath 'io.codearte.gradle.nexus:gradle-nexus-staging-plugin:0.5.3'
        classpath 'net.researchgate:gradle-release:2.1.2'
        classpath 'com.gradle.publish:plugin-publish-plugin:0.9.0'
    }
}

// *****************************************************************************
//
// *****************************************************************************

apply plugin: 'java'
apply plugin: 'groovy'
apply plugin: 'maven'
apply plugin: 'com.bmuschko.nexus'
apply plugin: 'io.codearte.nexus-staging'
apply plugin: 'net.researchgate.release'
apply plugin: 'com.gradle.plugin-publish'

// Added this (and publication def) to be able to publish to "maven local"
// and the jboss snapshot repo for testing, since I do not have rights to
// publish to your snapshot server
//      - Sincerely, Steve :)
apply plugin: "maven-publish"
apply plugin: 'maven-publish-auth'

sourceCompatibility = 1.6
targetCompatibility = 1.6
group               = 'com.github.lburgazzoli'
description         = 'A gradle plugin to create Karaf features'

ext {
    gradleVersion    = '2.7'
    gradleScriptDir  = "${rootProject.projectDir}/gradle"
    isReleaseVersion = !version.endsWith("SNAPSHOT")
    gitRoot          = "https://github.com/lburgazzoli"
    gitProject       = "https://github.com/lburgazzoli/lb-gradle-plugins"

    if(!project.hasProperty('nexusUsername') && !project.hasProperty('nexusPassword')) {
        nexusUsername = "$System.env.CI_DEPLOY_USERNAME"
        nexusPassword = "$System.env.CI_DEPLOY_PASSWORD"
    }

    versions = [
        spock : '1.0-groovy-2.3'
    ]
}

repositories {
    mavenCentral()    
    mavenLocal()
    jcenter()
}

dependencies {
    compile gradleApi()
    compile localGroovy()

    testCompile("org.spockframework:spock-core:$versions.spock") {
        exclude(module: 'groovy-all')
    }
}

jar {
    baseName = "${project.name}"

    manifest {
        attributes['Implementation-Title'   ] = "${group}.${project.name}-${project.version}"
        attributes['Implementation-Version' ] = project.version
        attributes['Implementation-Vendor'  ] = 'lb'
    }
}

// *****************************************************************************
//
// *****************************************************************************

nexus {
    sign = project.isReleaseVersion
}

extraArchive {
    javadoc = true
    sources = true
    tests   = false
}

modifyPom {
    project {
        name          = "${project.name}"
        description   = "${project.name}"
        url           = "${project.gitProject}"
        packaging     = 'jar'

        licenses {
            license {
                name         = "The Apache Software License, Version 2.0"
                url          = "http://www.apache.org/licenses/LICENSE-2.0.txt"
                distribution = "repo"
            }
        }

        scm {
            url                 = "${project.gitProject}"
            connection          = "scm:git:${project.gitProject}.git"
            developerConnection = "scm:git:${project.gitProject}.git"
        }
        
        developers {
            developer {
                id 'lburgazzoli'
                name 'Luca Burgazzoli'
            }
            developer {
                id 'sebersole'
                name 'Steve Ebersole'
            }
        }
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
    repositories {
        maven {
            name 'jboss-snapshots-repository'
            url 'https://repository.jboss.org/nexus/content/repositories/snapshots'
        }
    }
}

pluginBundle {
    website     = 'https://github.com/lburgazzoli/gradle-karaf-features-plugin'
    vcsUrl      = 'https://github.com/lburgazzoli/gradle-karaf-features-plugin'
    description = project.description
    tags        = [ 'osgi', 'karaf' ]

    plugins {
        karafFeaturesPlugin {
            id          = 'com.github.lburgazzoli.karaf.features'
            displayName = 'Gradle Karaf Features Plugin'
        }
    }
}


afterReleaseBuild.dependsOn uploadArchives

task nexusRelease(dependsOn: closeAndPromoteRepository) {
    println "Release Repo"
}

